version: '3.8'

services:
  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_backend
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./backend/php.ini:/usr/local/etc/php/conf.d/laravel.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=laravel123
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy

  # Quasar Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quasar_frontend
    restart: unless-stopped
    working_dir: /app
    ports:
      - "9000:9000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=9000
      - QUASAR_PUBLIC_PATH=/
      - VITE_API_URL=http://localhost:8000/api
    networks:
      - app-network
    depends_on:
      - backend

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel123
      MYSQL_ROOT_PASSWORD: root123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      timeout: 5s
      retries: 10
    networks:
      - app-network

  # Database Management
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=mysql
    networks:
      - app-network
    depends_on:
      - mysql

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
